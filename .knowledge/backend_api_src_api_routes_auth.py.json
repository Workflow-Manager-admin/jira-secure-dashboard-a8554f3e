{"is_source_file": true, "format": "Python", "description": "This file defines API routes for user authentication, including login, logout, and fetching current user info. It handles user sessions, JWT token creation, and integration with Jira for credential validation.", "external_files": ["...models/database", "...models/user_session", "...schemas/auth", "...services/jira_service", "...utils/auth", "...dependencies/auth"], "external_methods": ["get_database", "create_access_token", "encrypt_api_token", "generate_session_token", "require_authentication", "JiraService.validate_credentials"], "published": ["/auth/login", "/auth/logout", "/auth/me"], "classes": [{"name": "APIRouter", "description": "FastAPI routing object used to define API endpoints for authentication."}], "methods": [{"name": "login( login_data: LoginRequest, db: Session = Depends(get_database) )", "description": "Authenticates user with Jira credentials, creates a user session, and returns JWT token.", "scope": "", "scopeKind": ""}, {"name": "logout( current_user: dict = Depends(require_authentication), db: Session = Depends(get_database) )", "description": "Invalidates the current user session, effectively logging out the user.", "scope": "", "scopeKind": ""}, {"name": "get_current_user_info( current_user: dict = Depends(require_authentication) )", "description": "Retrieves information about the currently authenticated user.", "scope": "", "scopeKind": ""}], "calls": ["JiraService.validate_credentials", "generate_session_token", "encrypt_api_token", "create_access_token", "db.query", "db.add", "db.commit", "db.refresh"], "search-terms": ["auth routes", "Jira API validation", "session management", "JWT token creation", "FastAPI authentication", "user session handling"], "state": 2, "file_id": 18, "knowledge_revision": 36, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_current_user_info", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/api/routes/auth.py", "pattern": "/^async def get_current_user_info($/", "language": "Python", "kind": "function", "signature": "( current_user: dict = Depends(require_authentication) )"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/api/routes/auth.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/api/routes/auth.py", "pattern": "/^async def login($/", "language": "Python", "kind": "function", "signature": "( login_data: LoginRequest, db: Session = Depends(get_database) )"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/api/routes/auth.py", "pattern": "/^async def logout($/", "language": "Python", "kind": "function", "signature": "( current_user: dict = Depends(require_authentication), db: Session = Depends(get_database) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/api/routes/auth.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}], "hash": "b8c7e10a161cce43181c957b66f11fe3", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/api/routes/auth.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"36": ""}]}