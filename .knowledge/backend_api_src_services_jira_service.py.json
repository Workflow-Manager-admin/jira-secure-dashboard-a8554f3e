{"is_source_file": true, "format": "Python", "description": "This file defines a Jira API service class for interacting with Jira REST API, including authentication validation and project data retrieval, with internal methods for formatting and fetching project details.", "external_files": ["requests", "fastapi", "fastapi.HTTPException", "fastapi.status", "base64", "urllib.parse"], "external_methods": ["requests.get", "requests.exceptions.Timeout", "requests.exceptions.ConnectionError", "requests.exceptions.RequestException", "urljoin", "base64.b64encode"], "published": ["JiraService"], "classes": [{"name": "JiraService", "description": "Service class for interacting with Jira REST API, managing authentication, project retrieval, and detailed project data formatting."}], "methods": [{"name": "__init__(self, jira_domain: str, email: str, api_token: str)", "description": "Initializes JiraService with domain, email, and API token, setting up base URL and authorization headers.", "scope": "JiraService", "scopeKind": "class"}, {"name": "bool validate_credentials(self)", "description": "Validates Jira credentials by making a test API call to 'myself' endpoint, raising HTTP exceptions on errors.", "scope": "JiraService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] get_user_projects(self)", "description": "Retrieves accessible projects for the authenticated user, formatting and returning project data.", "scope": "JiraService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] _format_projects(self, projects_data: List[Dict[str, Any]])", "description": "Internal method to format raw project data from API into a structured format including lead info and avatar URLs.", "scope": "JiraService", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] _get_project_details(self, project_key: str)", "description": "Fetches additional details for a project, such as issue types and project style, handling exceptions gracefully.", "scope": "JiraService", "scopeKind": "class"}], "calls": ["requests.get", "urljoin", "base64.b64encode"], "search-terms": ["Jira API service", "project data retrieval", "authentication validation", "API interaction", "project formatting"], "state": 2, "file_id": 11, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraService", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^class JiraService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^    def __init__(self, jira_domain: str, email: str, api_token: str):$/", "language": "Python", "kind": "member", "signature": "(self, jira_domain: str, email: str, api_token: str)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_format_projects", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^    def _format_projects(self, projects_data: List[Dict[str, Any]]) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, projects_data: List[Dict[str, Any]])", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_project_details", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^    def _get_project_details(self, project_key: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, project_key: str)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_projects", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^    def get_user_projects(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "validate_credentials", "path": "/home/kavia/workspace/code-generation/jira-secure-dashboard-a8554f3e/backend_api/src/services/jira_service.py", "pattern": "/^    def validate_credentials(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}], "hash": "d06ba13d8e721f28831f265decf83031", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/services/jira_service.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"22": ""}]}